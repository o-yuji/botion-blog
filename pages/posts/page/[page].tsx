import Head from "next/head"
import { getAllPosts,getPostsForTopPage,getPostsByPage,getNumberOfPages,getAllTags } from "@/lib/notionAPI";
import SinglePost from "@/components/Post/SinglePost";
import Pagination from "@/components/Pagination/Pagination";
import Tag from "@/components/Tag/Tag";

export const getStaticPaths = async () => {
  const numberOfPage = await getNumberOfPages()

  let params = []
  for (let i = 1; i < numberOfPage; i++){
    params.push({params:{page:i.toString()}})
  }

  return {
    paths: params,
    fallback:"blocking"
  }
}

export const getStaticProps = async (context:any) => {
  const currentPage = context.params?.page;
  const postsByPage = await getPostsByPage(parseInt(currentPage.toString(), 10))
  const numberOfPage = await getNumberOfPages()
  const allTags = await getAllTags()
  
  return {
    props: {
      postsByPage,
      numberOfPage,
      allTags,
    },
    revalidate:60,
  }
}

const BlogPageList = ({ postsByPage,numberOfPage,allTags }:any) => {
  // console.log(allPosts)
  return (
    <div className="container h-full w-full mx-auto font-mono text">
      <Head>
        <title>Notion-Blog</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="container w-full mt-16 flex flex-col items-center">
        <h1 className="text-5xl font-medium text-center mb-16">
          NotionBlogðŸš€
        </h1>
        <div className="sm:grid grid-cols-2 w-full gap-3 mx-auto">
          {postsByPage.map((post: any) => (
            <SinglePost key={post.id} post={post} isPaginationPage={true} />
          ))}
        </div>
        <Pagination numberOfPage={numberOfPage} tag={""} />
        <Tag tags={allTags} />
      </main>

    </div>
  )
}

export default BlogPageList;