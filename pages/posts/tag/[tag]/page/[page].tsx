import Head from "next/head"
import {
  getAllPosts,
  getPostsForTopPage,
  getPostsByPage,
  getNumberOfPages,
  getPostsByTagAndPage,
  getNumberOfPagesByTag,
  getAllTags
} from "@/lib/notionAPI";
import SinglePost from "@/components/Post/SinglePost";
import Pagination from "@/components/Pagination/Pagination";
import Tag from "@/components/Tag/Tag";

export const getStaticPaths = async () => {
  const allTags = await getAllTags();
  let params:any = [];

  await Promise.all(
    allTags.map((tag) => {
      return getNumberOfPagesByTag(tag).then((numberOfPagesByTag: number) => {
        for (let i = 1; i <= numberOfPagesByTag; i++){
          params.push({ params: { tag:tag,page: i.toString() } });
        }
      })
    })
  )

  return {
    paths:params,
    fallback:"blocking"
  }
}

export const getStaticProps = async (context:any) => {
  const currentPage = context.params?.page.toString();
  const currentTag = context.params?.tag.toString();
  const upperCaseCurrentTag = currentTag.charAt(0).toUpperCase() + currentTag.slice(1);
  const posts = await getPostsByTagAndPage(upperCaseCurrentTag,parseInt(currentPage,10));
  const numberOfPagesByTag = await getNumberOfPagesByTag(upperCaseCurrentTag)
  const allTags = await getAllTags()

  return {
    props: {
      posts,
      numberOfPagesByTag,
      currentTag,
      allTags,
    },
    revalidate:10,
  }
}

const BlogTagPageList = ({numberOfPagesByTag,posts,currentTag,allTags}:any) => {
  // console.log(allPosts)
  return (
    <div className="container h-full w-full mx-auto font-mono text">
      <Head>
        <title>Notion-Blog</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="container w-full mt-16 flex flex-col items-center">
        <h1 className="text-5xl font-medium text-center mb-16">
          NotionBlogðŸš€
        </h1>
        <div className="sm:grid grid-cols-2 w-full gap-3 mx-auto">
          {posts.map((post: any) => (
            <SinglePost key={post.id} post={post} isPaginationPage={true} />
          ))}
        </div>
        <Pagination numberOfPage={numberOfPagesByTag} tag={currentTag} />
        <Tag tags={allTags} />
      </main>

    </div>
  )
}

export default BlogTagPageList;